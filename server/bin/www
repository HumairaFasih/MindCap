#!/usr/bin/env node

/**
 * Module dependencies.
 */

const http = require('http');
const mongoose = require('mongoose');
const app = require('../index');

/**
 * Get port from environment and store in Express.
 */

const port = process.env.PORT || '3003';
app.set('port', port);

/**
 * Create HTTP server.
 */

const server = http.createServer(app);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `${addr.port}`;
  console.log(
    `Connection to database successful. Server started on port ${bind}`
  );
}

/**
 * Listen on provided port, on all network interfaces.
 */

// Connect to database
mongoose
  .connect(process.env.MONGO_CONN_URI, { dbName: 'mindcap' })
  .then(() => {
    server.listen(port);
  })
  .catch((err) => {
    console.log(err);
  });

server.on('error', onError);
server.on('listening', onListening);
